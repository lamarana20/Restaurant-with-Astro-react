---
import Layout from '../../layouts/Layout.astro';
import { menuItems, categories } from '../../utils/data.js';

export async function getStaticPaths() {
  return menuItems.map(item => ({
    params: { id: item.id.toString() }
  }));
}

const { id } = Astro.params;
const item = menuItems.find(i => i.id.toString() === id);

if (!item) {
  return Astro.redirect('/menu');
}

const categoryObj = categories.find(c => c.id === item.category);
const categoryName = categoryObj ? categoryObj.name : item.category;
const categoryIcon = categoryObj ? categoryObj.icon : 'üçΩÔ∏è';
---

<Layout title={`${item.name} | Notre Menu`}>
  <div class="max-w-xl mx-auto p-4 md:p-6 my-20">
    <a href="/menu" class="inline-flex items-center text-amber-600 hover:text-amber-700 mb-6 transition" aria-label="Retour au menu">
      ‚Üê Retour au menu
    </a>

    <article class="bg-white rounded-xl shadow-lg overflow-hidden">
      <div class="aspect-w-3 aspect-h-2">
        <img
          src={item.image || '/placeholder-food.jpg'}
          alt={`Photo de ${item.name}`}
          class="w-full h-full object-cover"
          loading="lazy"
          width="800"
          height="600"
        />
      </div>

      <div class="p-6 space-y-6">
        <header>
          <h1 class="text-4xl font-extrabold text-gray-900">{item.name}</h1>
          {categoryName && (
            <span class="inline-flex items-center gap-2 mt-2 px-4 py-1 text-sm bg-amber-100 text-amber-800 rounded-full font-semibold select-none">
              <span aria-hidden="true">{categoryIcon}</span> {categoryName}
            </span>
          )}
        </header>

        <p class="text-gray-700 text-lg leading-relaxed">{item.description}</p>

        <section aria-label="Informations nutritionnelles et pr√©paration" class="flex flex-wrap gap-4 text-gray-600 text-sm font-medium">
          <div class="flex items-center gap-1">
            <span aria-hidden="true">‚è±</span> Pr√©paration : <strong>{item.prepTime} min</strong>
          </div>

          <div class="flex items-center gap-1">
            <span aria-hidden="true">üî•</span> Calories : <strong>{item.calories} kcal</strong>
          </div>

          {item.isVegan && (
            <div class="text-green-700 font-semibold flex items-center gap-1 select-none" aria-label="Plat Vegan">
              üå± Vegan
            </div>
          )}

          {item.isGlutenFree && (
            <div class="text-blue-700 font-semibold flex items-center gap-1 select-none" aria-label="Sans gluten">
              üö´ Gluten
            </div>
          )}
        </section>

        <div class="flex items-center justify-between">
          <p class="text-3xl font-extrabold text-amber-600">{item.price.toFixed(2)} $</p>

          <button
            class="bg-amber-600 hover:bg-amber-700 text-white py-3 px-8 rounded-full font-semibold transition-transform transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-opacity-50"
            aria-label={`Ajouter ${item.name} au panier`}
          >
            Ajouter au panier
          </button>
        </div>
      </div>
    </article>
  </div>
</Layout>
